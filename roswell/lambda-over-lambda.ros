#!/bin/sh
#|-*- mode:lisp -*-|#
#|
exec ros -Q -- $0 "$@"
|#
(progn ;;init forms
  (ros:ensure-asdf)
  #+quicklisp(ql:quickload '(:djula :cl-ppcre :uiop) :silent t)
  )

(defpackage :ros.script.lambda-over-lambda.3758533090
  (:use :cl))
(in-package :ros.script.lambda-over-lambda.3758533090)

;; cd `dirname $0`
(defvar *command-dir*)
(defvar *project-dir*)
(defvar *template*)
(defvar *ros-file*)

(defun ../ (pathname) (truename (uiop:merge-pathnames* "./../" pathname)))

(defun file-get-contents (filename)
  (with-open-file (stream filename)
    (let ((contents (make-string (file-length stream))))
      (read-sequence contents stream)
      contents)))

(defun get-ros-package (content) ; todo: err handling
  (elt (second (multiple-value-list (cl-ppcre:scan-to-strings "\(defpackage :([^
 ]+)\)" content))) 1))

(defun delete-shebang (content)
  (cl-ppcre:regex-replace "\\A#![^
]+
" content ""))

(defun swap-main (content)
  (cl-ppcre:regex-replace "\\(defun main" content "(defun original-main"))

(defun %log (str &rest rest)
  (apply #'format (append (list *error-output* (format nil "*** ~A~%" str)) rest)))

(defun prepare-variables ()
  (setf *command-dir* (make-pathname :defaults *load-pathname* :name nil :type nil))
  (setf *project-dir* (../ *command-dir*))
  (djula:add-template-directory (uiop:merge-pathnames* "../templates/" *command-dir*))
  (setf *template* (djula:compile-template* "template.ros")))

(defun main (&rest argv)
  (declare (ignorable argv))
  (setf *ros-file* (elt argv 0))
  (prepare-variables)
  (uiop:chdir (../ *command-dir*))
  ;; rosファイルを変換して中間rosファイルを生成する
  ;; 渡されるrosファイルは，第一引数にhandler，第二引数にcontentが入って渡されるという想定
  (let* ((contents (file-get-contents *ros-file*))
         (ros-package (get-ros-package contents))
         (temporary-file-path (uiop:merge-pathnames* #P"temporary.ros" *project-dir*))
         (output-file-path (uiop:merge-pathnames* "out.zip" *default-pathname-defaults*)))
    (%log "Writing temporary file into ~A ..." temporary-file-path)
    (with-open-file (s temporary-file-path :direction :output)
      (djula:render-template* *template* s :body (swap-main (delete-shebang contents)) :ros-package (string-upcase ros-package)))
    (%log "Temporary roswell script generated.")
    (%log "Building ~A with docker-compose (it may takes a while) ..." output-file-path)
    ;; TODO: Kill when SIGHUP
    (uiop:run-program "make -B build" :output :interactive :error-output :interactive :force-shell t)
    (uiop:rename-file-overwriting-target (uiop:merge-pathnames* "out.zip" *project-dir*) output-file-path)
    (%log "Done! Artifact generated: ~A" output-file-path)))

;;; vim: set ft=lisp lisp:
